Primero(Programa) = {identificador, leer, escribir, si, mientras, e}
Primero(Seq) = {identificador, leer, escribir, si, mientras, e}
Primero(Sentencia) = {identificador, leer, escribir, si, mientras}
Primero(Asignacion) = {identificador}
Primero(Lectura) = {leer}
Primero(Escritura) = {escribir}
Primero(Condicional) = {si}
Primero(Else) = {sino, e}
Primero(Ciclo) = {mientras}
Primero(Bool) = {(, not}
Primero(SBool) = {or, and, e}
Primero(Condicion) = { ( , not }
Primero(Bloque) = { { }
Primero(ExpArit) = {-, id, const, (}
Primero(SExpArit) = {+, -, e}
Primero(Term) = {-, id, const, (}
Primero(STerm) = {*, /, e}
Primero(Neg) = {-, id, const, (}
Primero(Pot) = {id, const, (}
Primero(SPot) = {**, //, e}
Primero(Factor) = {id, const, (}
Primero(Op1) = {+, -}
Primero(Op2) = {*, /}
Primero(Op3) = {**, //}
Primero(OpLog) = {or, and}
Primero(OpRel) = {<, >, <=, >=, =}

Siguiente(Programa) = {$}
Siguiente(Seq) = {Fin., } }
Siguiente(Sentencia) = {identificador, leer, escribir, si, mientras, Fin., } }
Siguiente(Asignacion) = Siguiente(Sentencia) = {identificador, leer, escribir, si, mientras, Fin., } }
Siguiente(Lectura) = Siguiente(Sentencia) = {identificador, leer, escribir, si, mientras, Fin., } }
Siguiente(Escritura) = Siguiente(Sentencia) = {identificador, leer, escribir, si, mientras, Fin., } }
Siguiente(Condicional) = Siguiente(Sentencia) = {identificador, leer, escribir, si, mientras, Fin., } }
Siguiente(Ciclo) = Siguiente(Sentencia) = {identificador, leer, escribir, si, mientras, Fin., } }
Siguiente(Else) = Siguiente(Condicional) = {identificador, leer, escribir, si, mientras, Fin., } }
Siguiente(Bool) = Primero(hacer) | Primero(entonces) = { hacer, entonces }
Siguiente(SBool) = Siguiente(Bool) = { hacer, entonces }
Siguiente(Condicion) = Primero(SBool) = {or, and} | Siguiente(Bool) = {or, and, hacer, entonces }
Siguiente(Bloque) = Primero(Else) | Siguiente(Else) | Siguiente(Condicional) | Siguiente(Ciclo) = {sino, identificador, leer, escribir, si, mientras, Fin., } }
Siguiente(ExpArit) = Siguiente(Asignacion) | Primero( ) ) | Primero(OpRel) = {identificador, leer, escribir, si, mientras, Fin., } , ), <, >, <=, >=, =}
Siguiente(SExpArit) = Siguiente(ExpArit) = {identificador, leer, escribir, si, mientras, Fin., } , ), <, >, <=, >=, =}
Siguiente(Term) = Primero(SExpArit) = {+, -, e} | Siguiente(ExpArit) = {+, -, identificador, leer, escribir, si, mientras, Fin., } , ), <, >, <=, >=, =}
Siguiente(STerm) = Siguiente(Term) = {+, -, identificador, leer, escribir, si, mientras, Fin., } , ), <, >, <=, >=, =}
Siguiente(Neg) = Primero(STerm) = {*, /, e} | Siguiente(Term) = {*, / , +, -, identificador, leer, escribir, si, mientras, Fin., ), <, >, <=, >=, =}
Siguiente(Pot) = Siguiente(Neg) = {*, / , +, -, identificador, leer, escribir, si, mientras, Fin., } , ), <, >, <=, >=, =}
Siguiente(SPot) = Siguiente(Pot) = {*, / , +, -, identificador, leer, escribir, si, mientras, Fin., } , ), <, >, <=, >=, =}
Siguiente(Factor) = Primero(SPot) = {**, //, e} | Siguiente(Pot) | Siguiente(SPot) = {**, //, *, / , +, -, identificador, leer, escribir, si, mientras, Fin., }, ), <, >, <=, >=, =}
Siguiente(Op1) = Primero(Term) = {-, id, const, (}
Siguiente(Op2) = Primero(Neg) = {-, id, const, (}
Siguiente(Op3) = Primero(Factor) = {id, const, (}
Siguiente(OpLog) = Primero(Condicion) = { ( , not }
Siguiente(OpRel) = Primero(ExpArit) = {-, id, const, (}
